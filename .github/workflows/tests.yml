name: Tests

on:
  push:
    branches: [ master ]
    paths-ignore: [ 'dist/*.js' ]
  pull_request:
    branches: [ master ]

jobs:
  deploy-action-code:
    if: github.event_name == 'push'
    name: Deploy Action Code
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2.3.4
        with:
          token: ${{secrets.BOT_TOKEN}}
      - name: Generate action code
        run: npm run deploy
      - name: Configure repository
        run: |
          git config user.name "${{secrets.BOT_USERNAME}}"
          git config user.email "${{secrets.BOT_USERNAME}}@users.noreply.github.com"
      - name: Commit changes
        run: |
          if ! git diff --exit-code --quiet; then
            git add .
            git commit -m "[AUTO] Update generated code"
            git push
          fi

  test-defaults:
    needs: deploy-action-code
    if: always() && !failure() && !cancelled()
    name: Test Default Inputs
    env:
      INPUT_TAG: 1.2.3
    runs-on: ubuntu-latest
    steps:
      - run: echo "RUNNER_DEBUG=1" >> $GITHUB_ENV
        if: github.event_name == 'pull_request' && env.RUNNER_DEBUG != 1
      - run: test "${{env.RUNNER_DEBUG}}" == "1"
        if: github.event_name == 'pull_request'
      - run: test '${{secrets.ACTIONS_STEP_DEBUG}}' == 'true'
        if: github.event_name == 'push'
      - name: Install dependencies
        if: github.event_name == 'pull_request'
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2.3.4
      - name: Generate action code
        if: github.event_name == 'pull_request'
        run: npm run deploy
      - uses: sersoft-gmbh/running-release-tags-action@master
        if: github.event_name == 'push'
        with:
          tag: ${{env.INPUT_TAG}}
          github-token: ${{secrets.GITHUB_TOKEN}}
          dry-run: true
        id: create-tags-master
      - uses: './'
        if: github.event_name == 'pull_request'
        with:
          tag: ${{env.INPUT_TAG}}
          github-token: ${{secrets.GITHUB_TOKEN}}
          dry-run: true
        id: create-tags-local
      - name: Check executed commands
        run: |
          ./__test__/bin/generate_expected_commands.sh '${{env.INPUT_TAG}}' true true false true false false \
            '${version} Major Release Track' \
            'This release tracks the latest ${version} major release (${version}.x.y).' \
            '${version} Minor Release Track' \
            'This release tracks the latest ${version} minor release (${version}.x).' \
          > expected.txt
          if [ '${{github.event_name}}' == 'push' ]; then
            echo '${{steps.create-tags-master.outputs.executed-commands}}' > actual.txt
          else
            echo '${{steps.create-tags-local.outputs.executed-commands}}' > actual.txt
          fi
          git diff --no-index -- expected.txt actual.txt

  test-customized:
    needs: deploy-action-code
    if: always() && !failure() && !cancelled()
    name: Test Customized Inputs
    strategy:
      matrix:
        tag: [ 'v1.2.3', 'x2.0.0', '3.2.7d', '12.43.1' ]
        update-major: [ true, false ]
        update-minor: [ true, false ]
        skip-repo-setup: [ false ]
        create-release: [ true, false ]
        create-release-as-draft: [ true, false ]
        update-full-release: [ false ]
        include:
          - tag: 'v1.2.3'
            update-major: true
            update-minor: true
            skip-repo-setup: true
            create-release: true
            create-release-as-draft: false
            update-full-release: true
    env:
      INPUT_RELEASE_TITLE: 'Release ${version}'
      INPUT_RELEASE_BODY: 'Release ${version} body ${version}'
      INPUT_PREFIX_REGEX: '(v|x)?'
      INPUT_SUFFIX_REGEX: 'd?'
    runs-on: ubuntu-latest
    steps:
      - run: echo "RUNNER_DEBUG=1" >> $GITHUB_ENV
        if: github.event_name == 'pull_request' && env.RUNNER_DEBUG != 1
      - run: test "${{env.RUNNER_DEBUG}}" == "1"
        if: github.event_name == 'pull_request'
      - run: test '${{secrets.ACTIONS_STEP_DEBUG}}' == 'true'
        if: github.event_name == 'push'
      - name: Install dependencies
        if: github.event_name == 'pull_request'
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2.3.4
      - name: Generate action code
        if: github.event_name == 'pull_request'
        run: npm run deploy
      - uses: sersoft-gmbh/running-release-tags-action@master
        if: github.event_name == 'push'
        with:
          tag: ${{matrix.tag}}
          update-major: ${{matrix.update-major}}
          update-minor: ${{matrix.update-minor}}
          prefix-regex: ${{env.INPUT_PREFIX_REGEX}}
          suffix-regex: ${{env.INPUT_SUFFIX_REGEX}}
          skip-repo-setup: ${{matrix.skip-repo-setup}}
          create-release: ${{matrix.create-release}}
          create-release-as-draft: ${{matrix.create-release-as-draft}}
          major-release-title: ${{matrix.release-title}}
          major-release-body: ${{matrix.release-body}}
          minor-release-title: ${{env.INPUT_RELEASE_TITLE}}
          minor-release-body: ${{env.INPUT_RELEASE_BODY}}
          update-full-release: ${{matrix.update-full-release}}
          github-token: ${{secrets.GITHUB_TOKEN}}
          dry-run: true
        id: create-tags-master
      - uses: './'
        if: github.event_name == 'pull_request'
        with:
          tag: ${{matrix.tag}}
          update-major: ${{matrix.update-major}}
          update-minor: ${{matrix.update-minor}}
          prefix-regex: ${{env.INPUT_PREFIX_REGEX}}
          suffix-regex: ${{env.INPUT_SUFFIX_REGEX}}
          skip-repo-setup: ${{matrix.skip-repo-setup}}
          create-release: ${{matrix.create-release}}
          create-release-as-draft: ${{matrix.create-release-as-draft}}
          major-release-title:  ${{env.INPUT_RELEASE_TITLE}}
          major-release-body: ${{env.INPUT_RELEASE_BODY}}
          minor-release-title: ${{env.INPUT_RELEASE_TITLE}}
          minor-release-body: ${{env.INPUT_RELEASE_BODY}}
          update-full-release: ${{matrix.update-full-release}}
          github-token: ${{secrets.GITHUB_TOKEN}}
          dry-run: true
        id: create-tags-local
      - name: Check executed commands
        run: |
          ./__test__/bin/generate_expected_commands.sh \
            '${{matrix.tag}}' \
            '${{matrix.update-major}}' \
            '${{matrix.update-minor}}' \
            '${{matrix.skip-repo-setup}}' \
            '${{matrix.create-release}}' \
            '${{matrix.create-release-as-draft}}' \
            '${{matrix.update-full-release}}' \
            '${{env.INPUT_RELEASE_TITLE}}' \
            '${{env.INPUT_RELEASE_BODY}}' \
            '${{env.INPUT_RELEASE_TITLE}}' \
            '${{env.INPUT_RELEASE_BODY}}' \
          > expected.txt
          if [ '${{github.event_name}}' == 'push' ]; then
            echo ':${{steps.create-tags-master.outputs.executed-commands}}' > actual.txt
          else
            echo '${{steps.create-tags-local.outputs.executed-commands}}' > actual.txt
          fi
          git diff --no-index -- expected.txt actual.txt

  test-from-env:
    needs: deploy-action-code
    if: always() && !failure() && !cancelled()
    name: Test With Environment
    strategy:
      matrix:
        tag: [ 'v1.2.3', 'x2.0.0', '3.2.7d', '12.43.1' ]
    env:
      INPUT_RELEASE_TITLE: 'Release ${version}'
      INPUT_RELEASE_BODY: 'Release ${version} body ${version}'
      INPUT_PREFIX_REGEX: '(v|x)?'
      INPUT_SUFFIX_REGEX: 'd?'
      INPUT_UPDATE_MAJOR: true
      INPUT_UPDATE_MINOR: true
      INPUT_SKIP_REPO_SETUP: false
      INPUT_CREATE_RELEASE: true
      INPUT_CREATE_RELEASE_AS_DRAFT: false
      INPUT_UPDATE_FULL_RELEASE: false
    runs-on: ubuntu-latest
    steps:
      - run: echo "RUNNER_DEBUG=1" >> $GITHUB_ENV
        if: github.event_name == 'pull_request' && env.RUNNER_DEBUG != 1
      - run: test "${{env.RUNNER_DEBUG}}" == "1"
        if: github.event_name == 'pull_request'
      - run: test '${{secrets.ACTIONS_STEP_DEBUG}}' == 'true'
        if: github.event_name == 'push'
      - name: Install dependencies
        if: github.event_name == 'pull_request'
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2.3.4
      - name: Generate action code
        if: github.event_name == 'pull_request'
        run: npm run deploy
      - uses: sersoft-gmbh/running-release-tags-action@master
        if: github.event_name == 'push'
        with:
          update-major: ${{env.INPUT_UPDATE_MAJOR}}
          update-minor: ${{env.INPUT_UPDATE_MINOR}}
          prefix-regex: ${{env.INPUT_PREFIX_REGEX}}
          suffix-regex: ${{env.INPUT_SUFFIX_REGEX}}
          skip-repo-setup: ${{env.INPUT_SKIP_REPO_SETUP}}
          create-release: ${{env.INPUT_CREATE_RELEASE}}
          create-release-as-draft: ${{env.INPUT_CREATE_RELEASE_AS_DRAFT}}
          major-release-title: ${{env.INPUT_RELEASE_TITLE}}
          major-release-body: ${{env.INPUT_RELEASE_BODY}}
          minor-release-title: ${{env.INPUT_RELEASE_TITLE}}
          minor-release-body: ${{env.INPUT_RELEASE_BODY}}
          update-full-release: ${{env.INPUT_UPDATE_FULL_RELEASE}}
          github-token: ${{secrets.GITHUB_TOKEN}}
          dry-run: true
        env:
          TEST_GITHUB_REF: refs/tags/${{matrix.tag}}
        id: create-tags-master
      - uses: './'
        if: github.event_name == 'pull_request'
        with:
          update-major: ${{env.INPUT_UPDATE_MAJOR}}
          update-minor: ${{env.INPUT_UPDATE_MINOR}}
          prefix-regex: ${{env.INPUT_PREFIX_REGEX}}
          suffix-regex: ${{env.INPUT_SUFFIX_REGEX}}
          skip-repo-setup: ${{env.INPUT_SKIP_REPO_SETUP}}
          create-release: ${{env.INPUT_CREATE_RELEASE}}
          create-release-as-draft: ${{env.INPUT_CREATE_RELEASE_AS_DRAFT}}
          major-release-title: ${{env.INPUT_RELEASE_TITLE}}
          major-release-body: ${{env.INPUT_RELEASE_BODY}}
          minor-release-title: ${{env.INPUT_RELEASE_TITLE}}
          minor-release-body: ${{env.INPUT_RELEASE_BODY}}
          update-full-release: ${{env.INPUT_UPDATE_FULL_RELEASE}}
          github-token: ${{secrets.GITHUB_TOKEN}}
          dry-run: true
        env:
          TEST_GITHUB_REF: refs/tags/${{matrix.tag}}
        id: create-tags-local
      - name: Check executed commands
        run: |
          ./__test__/bin/generate_expected_commands.sh \
            '${{matrix.tag}}' \
            '${{env.INPUT_UPDATE_MAJOR}}' \
            '${{env.INPUT_UPDATE_MINOR}}' \
            '${{env.INPUT_SKIP_REPO_SETUP}}' \
            '${{env.INPUT_CREATE_RELEASE}}' \
            '${{env.INPUT_CREATE_RELEASE_AS_DRAFT}}' \
            '${{enf.update-full-release}}' \
            '${{env.INPUT_RELEASE_TITLE}}' \
            '${{env.INPUT_RELEASE_BODY}}' \
            '${{env.INPUT_RELEASE_TITLE}}' \
            '${{env.INPUT_RELEASE_BODY}}' \
          > expected.txt
          if [ '${{github.event_name}}' == 'push' ]; then
            echo '${{steps.create-tags-master.outputs.executed-commands}}' > actual.txt
          else
            echo '${{steps.create-tags-local.outputs.executed-commands}}' > actual.txt
          fi
          git diff --no-index -- expected.txt actual.txt

  test-invalid:
    needs: deploy-action-code
    if: always() && !failure() && !cancelled()
    name: Test Invalid Inputs
    strategy:
      matrix:
        tag: [ '1', '34.2', 'v3x', 'not-a-version' ]
    env:
      INPUT_FAIL_ON_NON_SEMVER_TAG: false
    runs-on: ubuntu-latest
    steps:
      - run: echo "RUNNER_DEBUG=1" >> $GITHUB_ENV
        if: github.event_name == 'pull_request' && env.RUNNER_DEBUG != 1
      - run: test "${{env.RUNNER_DEBUG}}" == "1"
        if: github.event_name == 'pull_request'
      - run: test '${{secrets.ACTIONS_STEP_DEBUG}}' == 'true'
        if: github.event_name == 'push'
      - name: Install dependencies
        if: github.event_name == 'pull_request'
        run: sudo npm i -g typescript @vercel/ncc
      - uses: actions/checkout@v2.3.4
      - name: Generate action code
        if: github.event_name == 'pull_request'
        run: npm run deploy
      - uses: sersoft-gmbh/running-release-tags-action@master
        if: github.event_name == 'push'
        with:
          tag: ${{matrix.tag}}
          fail-on-non-semver-tag: ${{env.INPUT_FAIL_ON_NON_SEMVER_TAG}}
          github-token: ${{secrets.GITHUB_TOKEN}}
          dry-run: true
        id: create-tags-master
      - uses: './'
        if: github.event_name == 'pull_request'
        with:
          tag: ${{matrix.tag}}
          fail-on-non-semver-tag: ${{env.INPUT_FAIL_ON_NON_SEMVER_TAG}}
          github-token: ${{secrets.GITHUB_TOKEN}}
          dry-run: true
        id: create-tags-local
      - name: Check executed commands
        run: |
          if [ '${{github.event_name}}' == 'push' ]; then
            EXECUTED="${{steps.create-tags-master.outputs.executed-commands}}"
          else
            EXECUTED="${{steps.create-tags-local.outputs.executed-commands}}"
          fi
          test '${EXECUTED}' == ''
